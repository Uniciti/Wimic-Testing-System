{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../SharedWebSocket.service\";\nexport let SharedService = /*#__PURE__*/(() => {\n  class SharedService {\n    //private subscription_interval: Subscription = new Subscription();\n    // private berSubject = new BehaviorSubject<boolean>(false);\n    // private attSubject = new BehaviorSubject<boolean>(false);\n    // private statSubject = new BehaviorSubject<boolean>(false);\n    // private m3mSubject = new BehaviorSubject<boolean>(false);\n    // ber$ = this.berSubject.asObservable();\n    // att$ = this.berSubject.asObservable();\n    // stat$ = this.berSubject.asObservable();\n    // m3m$ = this.berSubject.asObservable();\n    constructor(sharedWebSocketService) {\n      this.sharedWebSocketService = sharedWebSocketService;\n      this.IP_BaseStatusSource = new BehaviorSubject('');\n      this.currentIP_BaseStatus = this.IP_BaseStatusSource.asObservable();\n      this.IP_AbonentStatusSource = new BehaviorSubject('');\n      this.currentIP_AbonentStatus = this.IP_AbonentStatusSource.asObservable();\n      this.frequencyStatusSource = new BehaviorSubject('');\n      this.currentFrequencyStatus = this.frequencyStatusSource.asObservable();\n      this.BandwidthStatusSource = new BehaviorSubject('');\n      this.currentBandwidthStatus = this.BandwidthStatusSource.asObservable();\n      this.AttenuationStatusSource = new BehaviorSubject('');\n      this.currentAttenuationStatus = this.AttenuationStatusSource.asObservable();\n      this.OffsetStatusSource = new BehaviorSubject('');\n      this.currentOffsetStatus = this.OffsetStatusSource.asObservable();\n      this.BercutStatus = new BehaviorSubject(false);\n      this.currentBercutStatus = this.BercutStatus.asObservable();\n      this.AttenuatorStatus = new BehaviorSubject(false);\n      this.currentAttenuatorStatus = this.AttenuatorStatus.asObservable();\n      this.StationStatus = new BehaviorSubject(false);\n      this.currentStationStatus = this.StationStatus.asObservable();\n    }\n    changeOidParamsStatus(_Frequency, _Bandwidth) {\n      this.frequencyStatusSource.next(_Frequency);\n      this.BandwidthStatusSource.next(_Bandwidth);\n    }\n    changeIpParamsStatus(_IP_Base, _IP_Abonent) {\n      this.IP_BaseStatusSource.next(_IP_Base);\n      this.IP_AbonentStatusSource.next(_IP_Abonent);\n    }\n    changeOffsetM3MStatus(_Offset) {\n      this.OffsetStatusSource.next(_Offset);\n    }\n    changeAttenuationAttStatus(_Attenuation) {\n      this.AttenuationStatusSource.next(_Attenuation);\n    }\n    updateStatus(device, value) {\n      switch (device) {\n        case \"ber\":\n          this.BercutStatus.next(value);\n          break;\n        case \"att\":\n          this.AttenuatorStatus.next(value);\n          break;\n        case \"station\":\n          this.StationStatus.next(value);\n          break;\n        default:\n          console.log(\"Такого устройства не существует.\");\n      }\n    }\n    static #_ = this.ɵfac = function SharedService_Factory(t) {\n      return new (t || SharedService)(i0.ɵɵinject(i1.SharedWebSocketService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SharedService,\n      factory: SharedService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SharedService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}